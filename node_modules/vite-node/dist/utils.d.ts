import { TransformResult } from 'vite';
import { N as Nullable, A as Arrayable } from './types-9a69ad8d.js';

declare const isWindows: boolean;
declare function slash(str: string): string;
declare function mergeSlashes(str: string): string;
declare function normalizeRequestId(id: string, base?: string): string;
declare function normalizeModuleId(id: string): string;
declare function isPrimitive(v: any): boolean;
declare function pathFromRoot(root: string, filename: string): string;
declare function toFilePath(id: string, root: string): string;
declare function withInlineSourcemap(result: TransformResult): Promise<TransformResult>;
/**
 * Convert `Arrayable<T>` to `Array<T>`
 *
 * @category Array
 */
declare function toArray<T>(array?: Nullable<Arrayable<T>>): Array<T>;

export { isPrimitive, isWindows, mergeSlashes, normalizeModuleId, normalizeRequestId, pathFromRoot, slash, toArray, toFilePath, withInlineSourcemap };
